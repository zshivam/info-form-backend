# """create formdata table

# Revision ID: f5e1f9737de2
# Revises: 381e22a10c91
# Create Date: 2025-07-17 12:05:17.010389

# """
# from typing import Sequence, Union

# from alembic import op
# import sqlalchemy as sa


# # revision identifiers, used by Alembic.
# revision: str = 'f5e1f9737de2'
# down_revision: Union[str, Sequence[str], None] = '381e22a10c91'
# branch_labels: Union[str, Sequence[str], None] = None
# depends_on: Union[str, Sequence[str], None] = None


# def upgrade() -> None:
#     """Upgrade schema."""
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.drop_index(op.f('ix_formdata_address'), table_name='formdata')
#     op.drop_index(op.f('ix_formdata_contact'), table_name='formdata')
#     op.drop_index(op.f('ix_formdata_id'), table_name='formdata')
#     op.drop_index(op.f('ix_formdata_name'), table_name='formdata')
#     op.drop_table(op.f('ix_formdata_image'), table_name='formdata')

#     op.drop_table('formdata')
#     # ### end Alembic commands ###


# def downgrade() -> None:
#     """Downgrade schema."""
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.create_table('formdata',
#     sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
#     sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
#     sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=True),
#     sa.Column('contact', sa.INTEGER(), autoincrement=False, nullable=True),
#     sa.Column('image', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
#     sa.PrimaryKeyConstraint('id', name=op.f('formdata_pkey'))
#     )
#     op.create_index(op.f('ix_formdata_name'), 'formdata', ['name'], unique=False)
#     op.create_index(op.f('ix_formdata_id'), 'formdata', ['id'], unique=False)
#     op.create_index(op.f('ix_formdata_contact'), 'formdata', ['contact'], unique=False)
#     op.create_index(op.f('ix_formdata_address'), 'formdata', ['address'], unique=False)
#     op.create_index(op.f('ix_formdata_image'), 'formdata', ['image'], unique=False)
#     # ### end Alembic commands ###
